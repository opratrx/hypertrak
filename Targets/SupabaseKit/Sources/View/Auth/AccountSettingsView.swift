//
//  AccountSettingsView.swift
//  SupabaseKit (Generated by SwiftyLaunch 1.5.0)
//  https://docs.swiftylaun.ch/module/authkit/account-settings
//

import AnalyticsKit
import AuthenticationServices
import SharedKit
import SwiftUI

private enum ActiveSlideOverCard: Identifiable {
	case reauthAccountDeletion
	var id: Self {
		return self
	}
}

public struct SupabaseAccountSettingsView: View {

	@EnvironmentObject var db: DB
	@State private var showSignoutDialog = false
	@State private var showAccountDeleteDialog = false

	@State private var shownSlideOverCard: ActiveSlideOverCard? = nil

	private let popBackToSettings: () -> Void

	public init(popBackToRoot: @escaping () -> Void) {
		self.popBackToSettings = popBackToRoot
	}

	public var body: some View {
		List {
			VStack(alignment: .center, spacing: 0) {

				ProfileImage(url: nil, width: 100)
					.padding(.bottom, 10)

				Text(db.currentUser?.email ?? "USER EMAIL")
					.font(.title)
					.fontWeight(.semibold)
					.lineLimit(1)
			}
			.frame(maxWidth: .infinity)
			.listRowBackground(Color(UIColor.systemGroupedBackground))

			Section {

				Button("Delete Account", role: .destructive) {
					Analytics.captureTap(
						"delete_account_btn", fromView: "AccountSettingsView", relevancy: .high)
					showAccountDeleteDialog = true
				}
				.confirmationDialog(
					"Are you sure you want to delete your Account?", isPresented: $showAccountDeleteDialog
				) {
					Button("Confirm Account Deletion", role: .destructive) {
						Analytics.captureTap(
							"confirm_delete_account_btn",
							fromView: "AccountSettingsView (Delete Account Dialog)", relevancy: .high)
						shownSlideOverCard = .reauthAccountDeletion
					}
				}

				Button("Sign Out", role: .destructive) {
					Analytics.captureTap("signout_btn", fromView: "AccountSettingsView")
					showSignoutDialog = true
				}
				.confirmationDialog("Are you sure you want to sign out?", isPresented: $showSignoutDialog) {
					Button("Confirm Sign Out", role: .destructive) {
						Analytics.captureTap(
							"confirm_signout_btn", fromView: "AccountSettingsView (Sign Out Dialog)",
							relevancy: .medium)
						Task {
							await tryFunctionOtherwiseShowInAppNotification(
								fallbackNotificationContent:
									.init(
										title: "Sign Out Error",
										message: "Try Again Later"
									)
							) {
								try await db.signOut()
							}
							popBackToSettings()
						}
					}
				}
			}
		}
		.padding(.top, -20)
		.navigationTitle("Your Account")
		.captureViewActivity(as: "AccountSettingsView")
		.navigationBarTitleDisplayMode(.inline)
		.requireLogin(db: db, onCancel: popBackToSettings)
		.sheet(item: $shownSlideOverCard) { activeCard in
			Group {
				switch activeCard {
					case .reauthAccountDeletion:
						ReAuthSheetView { result in
							switch result {
								case .success:
									Task {
										await tryFunctionOtherwiseShowInAppNotification(
											fallbackNotificationContent: .init(
												title: "Authorization Error",
												message: "Try Again Later.")
										) {
											try await Task.sleep(for: .seconds(0.5))
											print("Deleting Account...")
											// Perform Account Deletion
											// Because Supabase doesn't currently allow the users to delete their own account,
											// you will have to handle account deletion manually on your backend
											popBackToSettings()
										}
									}
									shownSlideOverCard = nil
								case .canceled:
									print("Re-auth canceled")
									shownSlideOverCard = nil
							}
						}
				}
			}
			.padding()
			.interactiveDismissDisabled()
			.presentationDetents([
				.height(380)
			])
			.presentationCornerRadius(35)
		}
	}
}

#Preview {
	NavigationStack {
		SupabaseAccountSettingsView(popBackToRoot: {})
			.environmentObject(DB())
	}
}
